lesson 1-7

^What is Angular?

Angular is a JavaScript Framework which allows you to create reactive Single-page-Applications (SPAs).

You can navigate around but the page never changes and if we need some data we'll load that in the background 
so the user has a seemless experience of everything happening instantly.

^Understanding Angular Versioning

Angularjs - Angular 1
    complete Re-write
Angular 2
Angular 4
    Releases major version 
Angular 12
    backward compatible changes       

A lot of problems are solved by making sure you're using the latest version of NodeJS, npm and the CLI itself.

Updating NodeJS:

Go to nodejs.org and download the latest version - uninstall (all) installed versions on your machine first.

Updating npm:

Run [sudo] npm install -g npm  (sudo  is only required on Mac/ Linux)

Updating the CLI

[sudo] npm uninstall -g angular-cli @angular/cli 

npm cache verify 

[sudo] npm install -g @angular/cli 

Here are some common issues & solutions:

Creation of a new project takes forever (longer than 3 minutes)
That happens on Windows from time to time => Try running the command line as administrator

You get an EADDR error (Address already in use)
You might already have another ng serve process running - make sure to quit that or use ng serve --port ANOTHERPORT  to serve your project on a new port

we can quit the server or run multiple servers on different ports 

My changes are not reflected in the browser (App is not compiling)
Check if the window running ng serve  displays an error. If that's not the case, make sure you're using the latest CLI version and try restarting your CLI

ng new my-first-app --no-strict --standalone false --routing false   << to create the angular app

by adding keywords with dashes we are disabling certain features which are not required for the basics

cd my-first--app to navigate to the folder

ng serve  << will open up a development server on a port
should not quit by pressing ctrl+c as we can do in React 
we should keep the server running as long as we are working on the code

Detects changes and automatically reloads 

while inspecting the page it will show the index html which has dynamically injected script code 

>> video 8 

Course Structure:
The basics - what are components? what are two-way databinding and how the files in the app are connected to each other
Components & databinding - app are build with the help of components and how it manipulates the DOM and user events 
Directives - helpers and instructions that you can write which will do some action at runtime
Services & Dependency injection - core feature that helps different pieces in your app communicate with each other, centralized code and manage the state of the Applications
Routing - Everything happens on one page but now we route it to different URLs which will look like we are switching pages but we will still be on a single page
Observables - concept which allows to manage Asynchronous code
Forms - Handling user inputs
Pipes - helps in transforming the output
Http - what if you need to connect to a web server or a database
Authentication - what does it mean and how it works
Optimization & ngModules - optimization and manage modules
Deployment - deploying our app from local machine to the internet
Animations & Testing along with real world project.

>> video 9 - 11

TypeScript

superset to JavaScript offers more features like classes interfaces with strong
typing 
whereas in Vanilla javaScript there's dynamic type where a string can be converted to number
So in conclusion TypeScript helps us write more robust code where the code is checked at the time
we write it not when we run it

TS - TypeScript

TS is doesn't run in the browser it is compiled to javaScript and then run into the browser
this is handled by the CLI

>>video 12 
adding bootstrap in the angular app

[x]


